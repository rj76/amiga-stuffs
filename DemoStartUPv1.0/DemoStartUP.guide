@database "DemoStartUP.guide"
@author "Cyborg/iNDUSTRY"
@remark "$VER: Demo StartUP Guide 1.0 (4. May 2001)"
@index INDEX

@node MAIN "Demo StartUP v1.0 - ©2001 Nemanja Bondzulic"



     		    @{b}@{u}D E M O   S T A R T - U P@{uu}@{ub}
     		           version 1.0


	 coded by @{b}Nemanja Bondzulic@{ub} [ cyborg@indus3.org ]


                       @{"     Intro        "     link INTRO}

                       @{"     Features     "     link FEATURES}

                       @{"     Usage        "     link USAGE}

                       @{"     Coding       "     link CODING}

                       @{"     Credits      "     link CREDITS}

                       @{"     Outro        "     link OUTRO}



	 	    [ http://www.indus3.org ]

@endnode

@node INDEX "Index"
@{"     Intro        "     link INTRO}
@{"     Features     "     link FEATURES}
@{"     Usage        "     link USAGE}
@{"     Coding       "     link CODING}
@{"     Credits      "     link CREDITS}
@{"     Outro        "     link OUTRO}
@endnode

@node INTRO "Intro"

There was a lot of discussion on  theme  "System  friendly  demos
-Pro  et  Contra"  in magazines around, but the situation has not
changed much for years. Still, most demos today  first  kill  the
system,  and  then  they  start  to  do magic. There shouldn't be
anything wrong or bad in this method if such demos could work  on
most machines. But, reality is different. Most of demos will work
only on AGA screens on TV, Video monitors or VGA monitors if  you
have scandoubler. Also, most of them will not work at all if they
are started from Workbench, so you are forced to reboot and start
them without startup sequence.

Today, many people have graphic cards. Writting support for every
graphic  card  in demos is of course possible but it's pointless.
So, the best way to get your demos working on most, if  not  all,
Amiga  systems  and view them on different types of screens using
different graphic chips is making your demo system friendly.

Performace loss comparing to "system-unfriendly" demo is  totally
exiguous. [ If you don't beleave try this startup. ]

I'm not sure why there are not so  many  demos  what  are  system
friendly  and support graphic cards, perhaps it is because coders
are poor nation, so they can't afford a graphic card ;>

So, I decided to release my start-up code and I  hope  this  will
change the situation atleast a little bit better.

You can use  this  start-up  in  your  demos,  intros,  games  or
whatever  you are making. You can change it, modify it, use parts
of it, spread it like you want, eat it, do whatever you want with
it, but PLEASE make demos that DO work on graphic cards!

@endnode

@node FEATURES "Features"

 Some of features are:

 - AmigaOS friendly

 - AGA fullscreen support

 - CGX/P96 fullscreen support

 - CGX/P96 window support

 - Doublebuffering

 - Shell arguments and tooltypes support

 - FPS limitation

 - Temporarly  stopping  execution  if  demo  is  not  running on
   frontmost screen

 - ASL screen mode requester for CGX/P96 systems

 - P61 replay routine by Jarno Paananen [ + some more people ]

 - Chunky 2 planar routines for 030 and 040+ by Mikael Kalms

 - It's not slow! ;>

@endnode

@node USAGE "Usage"

For assembling this start-up you'll need some  assembler,  PhxAss
will  be  a good choice, linker and make command. I'm using slink
and smake from SAS C package, but you can use your favorite, they
should   be   compatibile,   without   any  or  with  some  small
modifications of makefile.

Of  course,  you'll  need  many  official  include  files  [Amiga
Developer  CD  v2.1  is good place to find them] and includes for
CGX developement.

Next files are part of this startup:

610.4.asm		[player 61]
aslscrmodereq.asm	[screenmode requester]
basemacros.i		[some basic macros and values]
c2p.asm			[chunky 2 planar routines]
init.asm		[initialization part]
main.asm		[main loop of demo should be here]
MAKEFILE		[MAKEFILE :>]
softirq.asm		[interrupt code]
start.asm		[the main job is done here]
gfx <DIR>		[some test picture is here]
sfx <DIR>		[music]
includes <DIR>		[contains  include  files for  P61,  copy
			 them to your include: path]

All you need to  do  is  to  start  smake  (or  simular)  and  if
everything  passed  ok,  you'll  have a working executable called
TestUP.

Executable can be started from shell or using icon, and  you  can
set some arguments or tooltypes. Possible arguments are:

@{b}SCREENMODE=SM/S@{ub}

Opens ASL screenmode requester so you choose a  resolution.  Note
that  if  selected  resolution  is bigger than screensize demo is
using, picture will not be stretched to fullscreen.

This option works only if CGX/P96 is present.

@{b}AGA/S@{ub}

If demo is started on Amiga with CGX/P96 active,  demo  will  use
it. This option forces AGA output.

@{b}WINDOW=WIN/S@{ub}

Run demo in window. Available only on CGX/P96 on  screens  deeper
than 8 bits.

@{b}PUBSCREEN=PUB/K@{ub}

Select public screen to open window on.

@{b}NOFRONTSCREENCHECK=NOCHK/S@{ub}

Startup checks if demo is running on frontmost screen every  time
soft  interrupt  executes  [ default is 50 times per second ]. If
demo is not on frontmost screen, it will only wait for screen  to
become frontmost again and keep playing music. In the meantime it
will not execute main loop part so user will be able to  use  cpu
time  for  other  jobs.  Also,  music  will be played with 1/4 of
volume. Thus, demo watcher will have impression that demo do  not
eat cpu time at all and that you are excellent coder who's making
extremly optimized routines ;>

This option disables this feature, so no matter if your  demo  is
on frontmost screen or not, it will keep on running permanently.

This option is also useful if you have several graphic  cards  so
you  can  start  demo  using  one  of  them  and  use  other  for
showing/doing something else at the same time.

@{b}LIMITFPS/N@{ub}

You can limit fps using this option. 50 fps is the maximum at the
moment, so setting this to bigger values has no sense.


Analogical tooltypes to these shell  arguments  are:  SCREENMODE,
AGA,     WINDOW,    PUBSCREEN = screenname,   NOFRONTSCREENCHECK,
LIMITFPS = fps.
@endnode

@node CODING "Coding"

This is just a quick info about making your code cooperating good
with startup. For more info look at the sources. If you have some
problems feel free to contact me.

Adding your code to this startup [or adding startup code to  your
own  code  ;>]  should not be problem at all, if you respect some
rules.

After executing code from start.asm file  you'll  have  processor
type in @{b}_CPU@{ub}, floating point unit type in @{b}_FPU@{ub} longwords.

@{b}_chunky@{ub} is address of chunky buffer. To change a palette set it's
address to @{b}_newpal@{ub} variable, and on next screen refresh palette
will be changed.

All graphic effects, sprite movements, actually everything should
be  connected  with  timer. This way if code is not executing for
some time (when the demo is not running on frontmost  screen)  it
will  continue  execution  like  it  never stopped executing. Use
@{b}_gettime@{ub} routine to get actual time, also you can use @{b}time@{ub}  macro
in main.asm.

Don't mess with hardware directly.

@endnode

@node CREDITS "Credits"

Start-up code:
			@{b}Nemanja Bondzulic@{ub}
                        [ alias @{b}Cyborg / iNDUSTRY@{ub} ]
Chunky2planar routines:
			@{b}Mikael Kalms@{ub}
			[ alias Kalms / TBL ]
P61A replay routine:
                        @{b}Jarno Paananen@{ub}
			[ alias Guru / Sahara Surfers ]
P61A fixes:
			NoName / Haujobb
			Platon42


Some portions of code, ideas,  thoughts  might  be  taken,  used,
stolen,  abused,  and  might be products of other people's minds.
Big apology to those people, it was not done with  bad  intention
in mind.

If I have broke some copyright rules, sorry or sue me ;>

@endnode

@node OUTRO "Outro"

Ah  that's  it.  Sorry  for  not  so  informative  descripion  of
what-code-does-exectly.  Look  at  source  codes,  everything  is
written there.

If you want to use it in your  demos/intros  and  have  problems,
contact me.

If you find a bug [impossible?!] please let me know that.

This demo start-up is free/open source project, you can use it in
full  or  partial  form, you can modify it to your needs, you can
use it like it is now. Anyway, use it.




                                            cyborg@indus3.org
@endnode










